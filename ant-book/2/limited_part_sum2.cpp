#include<bits/stdc++.h>

#define rep(i,n) for(int i = 0; i < (n); i++)
#define rrep(i,n) for(int i = (n)-1; i >= 0; i--)
#define ll long long

#define MOD 1000000007

using namespace std;

ll dp[100001];

int main(){
  ll n,k;
  n=3;
  k=17;
  vector<ll> a({3, 5, 8});
  vector<ll> m({3, 2, 2});

  memset(dp, -1, sizeof(dp));
  dp[0]=0;

  rep(i, n){
    cout<<a[i]<<' '<<m[i]<<endl;
    rep(j, k+1){
      if(dp[j] >= 0){
        // i-1番目まで数値で合計jが達成できているので、i番目の数値は一つも使わずに全部余る
        dp[j] = m[i];
      }else if( j<a[i] || dp[j-a[i]] <= 0 ){
        // jがa[i]よりも小さいと、どうやってもa[i]を足してjにすることはできないので-1を入れる
        // i番目までの数値でj-a[i]を実現するのにa[i]が一つも余っていなければ足すためのa[i]がもう無いので-1を入れる
        dp[j] = -1;
      }else{
        dp[j] = dp[j-a[i]]-1;
      }

      rep(l, k+1)cout<<(dp[l]==-1 ? 0 : dp[l])<<' ';cout<<endl;

    }
    cout<<"-------------"<<endl;
  }

  cout<<(dp[k]>=0 ? "Yes" : "No")<<endl;

  return 0;
}

/*
3 3
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
3 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
-------------
5 2
2 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 0 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 0 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 1 0 0 0 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 0 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 0 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 0 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
-------------
8 2
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 1 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 1 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 2 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 2 2 0 1 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 2 2 2 1 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 2 2 2 2 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 2 2 2 2 0 0 1 0 0 0 
2 0 0 2 0 2 2 0 2 2 2 2 0 2 1 0 0 0 
2 0 0 2 0 2 2 0 2 2 2 2 0 2 2 0 0 0 
2 0 0 2 0 2 2 0 2 2 2 2 0 2 2 0 0 0 
2 0 0 2 0 2 2 0 2 2 2 2 0 2 2 0 2 0 
2 0 0 2 0 2 2 0 2 2 2 2 0 2 2 0 2 1 
-------------
*/
